@model BibliotecaOnline.Modelo.ViewModels.LivroViewModel

@{
    ViewBag.Title = "Adicionar Livro a Coleção";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("GravarLivro", "Livro", FormMethod.Post, new { enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

    <div class="card">
        <div class="card-header">
            Insira um novo Livro na coleção
        </div>
        <div class="form-vertical">
            <div class="form-group">
                @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "col-sm-2 col-form-label" })

                <div class="col-lg-12">
                    @Html.EditorFor(model => model.Titulo, null, new { htmlAttributes = new { @class = "form-control col-lg-10" } })
                    @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Autor, htmlAttributes: new { @class = "col-sm-2 col-form-label" })

                <div class="col-lg-12">
                    @Html.EditorFor(model => model.Autor, null, new { htmlAttributes = new { @class = "form-control col-lg-10" } })
                    @Html.ValidationMessageFor(model => model.Autor, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Sinopse, htmlAttributes: new { @class = "col-sm-2 col-form-label" })

                <div class="col-lg-12">
                    @Html.TextAreaFor(model => model.Sinopse, new { @class = "form-control col-lg-10" })
                    @Html.ValidationMessageFor(model => model.Sinopse, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DataLancamento, htmlAttributes: new { @class = "col-sm-2 col-form-label" })

                <div class="col-lg-12">
                    @Html.EditorFor(model => model.DataLancamento, null, new { htmlAttributes = new { @class = "form-control col-lg-10" } })
                    @Html.ValidationMessageFor(model => model.DataLancamento, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Genero, htmlAttributes: new { @class = "col-sm-2 col-form-label" })

                <div class="col-lg-12">
                    @Html.EditorFor(model => model.Genero, null, new { htmlAttributes = new { @class = "form-control col-lg-10" } })
                    @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImageUpload, new { @class = "col-form-label col-sm-2" })
                <div class="col-lg-4">
                    @Html.TextBoxFor(model => model.ImageUpload, new { type = "file", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ImageUpload, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Pdf, new { @class = "col-form-label col-sm-2" })
                <div class="col-lg-4">
                    @Html.TextBoxFor(model => model.Pdf, new { type = "file", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Pdf, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-12">
                <div class="form-group">
                    <input type="submit" class="btn btn-outline-primary" value="Salvar" />
                </div>
            </div>
        </div>
    </div>

}


@model Modelo.Modelo.Livro

@{
    ViewBag.Title = "EditarLivro";
}

@using (Html.BeginForm("EditarLivro", "Livro", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="card">
        <div class="card-header">
            Atualize o Livro
        </div>
        <div class="form-vertical">

            @Html.HiddenFor(model => model.LivroId)

            <div class="form-group">
                @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "col-sm-2 col-form-label" })

                <div class="col-lg-12">
                    @Html.EditorFor(model => model.Titulo, null, new { htmlAttributes = new { @class = "form-control col-lg-10" } })
                    @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Autor, htmlAttributes: new { @class = "col-sm-2 col-form-label" })

                <div class="col-lg-12">
                    @Html.EditorFor(model => model.Autor, null, new { htmlAttributes = new { @class = "form-control col-lg-10" } })
                    @Html.ValidationMessageFor(model => model.Autor, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Sinopse, htmlAttributes: new { @class = "col-sm-2 col-form-label" })

                <div class="col-lg-12">
                    @Html.TextAreaFor(model => model.Sinopse, new { @class = "form-control col-lg-10" })
                    @Html.ValidationMessageFor(model => model.Sinopse, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DataLancamento, htmlAttributes: new { @class = "col-sm-2 col-form-label" })

                <div class="col-lg-12">
                    @Html.EditorFor(model => model.DataLancamento, null, new { htmlAttributes = new { @class = "form-control col-lg-10" } })
                    @Html.ValidationMessageFor(model => model.DataLancamento, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Genero, htmlAttributes: new { @class = "col-sm-2 col-form-label" })

                <div class="col-lg-12">
                    @Html.EditorFor(model => model.Genero, null, new { htmlAttributes = new { @class = "form-control col-lg-10" } })
                    @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
               @if (Model.Imagem != null)
               {
                   var base64 = Convert.ToBase64String(Model.Imagem);
                   var imgSrc = String.Format("data:image/gif;base64,{0}", base64);

                   <img src="@imgSrc" style="max-width:100px; max-height:100px" />
               }
            </div>

            <div class="col-md-12">
                <div class="form-group">
                    <input type="submit" class="btn btn-outline-primary" value="Salvar" />
                    @Html.ActionLink("Voltar", "ListarLivros", null, new { @class = "btn btn-outline-success"})
                </div>
            </div>
        </div>
    </div>

}



